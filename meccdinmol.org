* Dinamica Molecolare
** Force Fields
Rappresenta il campo di forze in un sistema, senza calcolare le
superfici di energia potenziale direttamente.

Il potenziale viene preso così:

U_{tot} = U_{stretching} + U_{bending} + U_{tors} + U_{vdw} + U_{el} + U_{cross}


*** Stretching e Bending
Si calcola l'energia come derivata del potenziale prendendo come
potenziale per esempio il potenziale di morse:

V_m(\Delta R) = D*exp(-\alpha \Delta R)^2 

\alpha = \sqrt \frac k {2\mu}

Nota: le costanti dei bending sono più grandi delle costanti di stretching
*** Torsionali
Si usano 
** Monte Carlo
** Metodi Dinamica Molecolare

* Metodi HF
** RHF
Lo sappiamo tutti.

C'è il teorema di Koopman che dice che gli autovalori sono le energie degli orbitali molecolari, o almeno una loro approssimazione.
** UHF
Usa due set di orbitali diversi uno per gli spin \alpha e uno per gli
spin \beta

Soffre di problemi di "contaminazione di spin", praticamente per forza
di cose le funzioni d'onda prodotte da questo metodo non produce
funzioni che sono autovalori dell'operatore di spin.

** ROHF
Una parte del calcolo viene fatta tenendo gli orbitali doppiamente
occupati, un'altra parte tenendo orbitali occupati con un solo spin su.

Descrive bene solo gli alto spin
** Convergenza
Si utilizza il DIIS, a parte il nome è una procedura che serve per
migliorare la convergenza dei vari metodi iterativi di tipo SCF.

Funziona in questo modo:

Ad ogni iterazione SCF viene prodotto un operatore di fock F e una
matrice densità D. Si suppone che ci sia un modo per valutare una
certa matrice E che da fornisce l'errore, in altre parole quanto è
distante la convergenza.

Supponendo di avere fatto n iterazioni, abbiamo n matrici F e n
matrici D, e n matrici E, si definisce una funzione scalare che sta a
rappresentare un valore scalare dell'errore, questa dipende da un
vettore c, nel modo che si vede nella seconda equazione.

ErrF(c) = traccia(E_{n+1}*E_{n+1})

Prendendo:

E_{n+1} = \sum_{i=0}^n c_i E_i

(la somma di tutti i precedenti)

La minimizzazione di ErrF(c) avviene minimizzando i coefficienti c,
ovvero attraverso la diagonalizzazione di una matrice.

Nella realtà gli autovalori vengono ottenuti attraverso l'inversione
di una matrice che ha come dimensioni una cosa come n(numero di
iterazioni), ecco perchè si chiama direct inversion of iterative
space.

Vengono ottenuti dei coefficienti c che vengono utilizzati per
generare il nuovo F in questo modo:

F_n = \sum_{i=0}^n c_i F_i


* Metodi CI
Il punto di partenza è un calcolo RHF, ci sono gli orbitali molecolari, un tot di orbitali sono occupati, il resto virtuali.

Si fa il determinante di slater con gli orbitali occupati, se scambio un orbitale occupato con uno virtuale ho fatto il determinante "eccitato".

Costruire una funzione d'onda che combina gli orbitali molecolari fornisce l'energia di correlazione per un dato basis set.

Solitamente non si fanno tutte le eccitazione da tutti gli orbitali a tutti gli orbitali perchè si è interessati alle differenze tra due stati.

Per esempio il contributo della correlazione degli orbitali di Core tra due stati elettronici vicini sarà grande ma si annullerà se si fa la differenza, il contributo rilevante infatti è la correlazione degli elettroni di valenza.

Lo stesso vale per orbitali troppo _distanti_ in termini energetici.
 
** Full CI

Funzione d'onda è la combinazione lineare dei determinanti di slater, i coefficienti dell'espansione vengono ottimizzati nei confronti dell'energia elettronica.

Lo sviluppo è formalmente identico a quello di HF.

La funzione d'onda è esplicitamente definita così:

\Psi_{CI} = a_0 \Phi_{HF} + \sum_S a_S \Phi_S + ..doppie..triple

Ci sono le singole, le doppie, le triple fino a tutte le eccitazioni possibili.

Adesso bisogna minimizzare l'energia, quindi si fa la lagrangiana, uguale a quella HF (col vincolo di normalizzazione).

L = <\Psi|H|\Psi> -\lambda (<\Psi|\Psi>)

Calcoliamoci i pezzettini

<\Psi|H|\Psi> = \sum_i a_i^2 E_i + \sum_i \sum_{i\neqj}  <\Phi_i|H|\Phi_j>

<\Psi|\Psi> = \sum_i a_i^2

Poi deriviamo, e otteniamo un set di equazioni che mettiamo in una matrice da diagonalizzare.

\frac {\partial L}{a_i} = 2 a_i E_i2 \sum_j a_j <\Phi_i|H|\Phi_j> -2\lambda a_i = 0

Esistono trucchetti per calcolare gli elementi H_{ij} facilmente. Ad esempio  si fanno delle considerazioni di spin, le configurazioni i e j devono avere lo stesso spin totale altrimenti gli <\alpha|\beta> fanno annullare il tutto.

Esistono anche configurazioni che danno un misto tra i diversi spin, succede che quindi alcuni prodotti finiscono per non annullarsi, l'utilizzo di Configuration State Functions ovvia il problema.

La simmetria può ancora aiutare perchè l'Hamiltoniano deve essere totalsimmetrico.

Il teorema di Brillouin ci dice che gli elementi di matrice delle eccitazioni singole sono 0.

La matrice CI ha una forma diagonale a blocchi.

** SDCI
** MCSCF
* Metodi MP e CC
** MP2
** CC
* DFT
** TDDFT
* Argomenti sparsi
** Correlazione

* Org-Reference
: #+CAPTION: This is the caption for the next figure link (or table)
:     #+LABEL:   fig:SED-HR4049
:     [[./img/a.jpg]]

#+STARTUP: hidestars
